name: ci

on:
  push:
    paths:
    - "**.py"
    - "**.cmake"
    - "**/CMakeLists.txt"
    - ".github/workflows/ci.yml"


jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.9' ]
    name: Lint Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install -e .[lint]

    - run: flake8
    - run: mypy


  linux:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7' ]
    name: Linux Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install .[tests]
    - run: python -m gemini3d.install

    - run: pytest

# codecov coverage
    # - run: pip install codecov pytest-cov
    # - run: pytest --cov --cov-report=xml
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1


  macos:
    needs: linux
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ '3.7' ]
    name: MacOS Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install .[tests]
    - run: python -m gemini3d.install

    - run: pytest


  windows:
    needs: linux
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.7' ]
    name: Windows Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install .[tests]
    - run: pip install ninja

    - run: pytest
      env:
        CMAKE_GENERATOR: Ninja
