name: ci

env:
  GEMINI_ROOT: ~/gemini3d
  GEMINI_CIROOT: ~/ci
  CMAKE_BUILD_TYPE: Release
  CMAKE_GENERATOR: Ninja

on:
  push:
    paths:
    - "**.py"
    - ".github/workflows/ci.yml"
    pull_request:
    - "**.py"
    - ".github/workflows/ci.yml"


jobs:

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]
    # python 3.10 prereqs e.g. h5py not yet Python 3.10 wheels
    name: Lint Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install -e .[lint]
      timeout-minutes: 2

    - run: flake8
    - run: mypy


  linux:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9' ]
    name: Linux Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install .[tests,plots]
      timeout-minutes: 2

    - run: python -m gemini3d.install
      timeout-minutes: 2

    - name: Unit Tests
      run: pytest --pyargs gemini3d.tests.unit
      timeout-minutes: 2

    - name: build msis_setup, gemini3d.run, gemini.bin executables
      run: python -c "import gemini3d; gemini3d.setup()"
      timeout-minutes: 2

    - name: Integration Tests
      run: pytest --pyargs gemini3d.tests.intg
      timeout-minutes: 10

# codecov coverage
    # - run: pip install codecov pytest-cov
    # - run: pytest --cov --cov-report=xml
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1


  macos:
    needs: linux
    runs-on: macos-latest
    env:
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      FC: gfortran-11

    strategy:
      matrix:
        python-version: [ '3.8' ]

    name: MacOS Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Tell PATH to debug transient CI failures
      run: echo $PATH

    - run: python -m pip install .[tests,plots]
      timeout-minutes: 5
      # transient CI download speed

    - run: python -m gemini3d.install
      timeout-minutes: 7
      # transient CI download speed

    - name: Unit Tests
      run: pytest --pyargs gemini3d.tests.unit
      timeout-minutes: 2

    - name: build msis_setup, gemini3d.run, gemini.bin executables
      run: python -c "import gemini3d; gemini3d.setup()"
      timeout-minutes: 3

    - name: Integration Tests
      run: pytest --pyargs gemini3d.tests.intg
      timeout-minutes: 10
